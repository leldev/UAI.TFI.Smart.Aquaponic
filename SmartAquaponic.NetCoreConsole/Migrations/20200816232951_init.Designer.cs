// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SmartAquaponic.NetCoreConsole;

namespace SmartAquaponic.NetCoreConsole.Migrations
{
    [DbContext(typeof(Context))]
    [Migration("20200816232951_init")]
    partial class init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("SmartAquaponic.Domain.Checksum", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Hash")
                        .HasColumnType("int");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Table")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Checksum");
                });

            modelBuilder.Entity("SmartAquaponic.Domain.Communication", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsAnswered")
                        .HasColumnType("bit");

                    b.Property<string>("Message")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Reponse")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Communication");
                });

            modelBuilder.Entity("SmartAquaponic.Domain.Decor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("TankId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TankId");

                    b.ToTable("Decor");
                });

            modelBuilder.Entity("SmartAquaponic.Domain.Fish", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("FishId")
                        .HasColumnType("int");

                    b.Property<bool>("IsLonely")
                        .HasColumnType("bit");

                    b.Property<int>("MaxVolume")
                        .HasColumnType("int");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PH")
                        .HasColumnType("int");

                    b.Property<double>("Size")
                        .HasColumnType("float");

                    b.Property<int?>("TankId")
                        .HasColumnType("int");

                    b.Property<double>("Temp")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("FishId");

                    b.HasIndex("TankId");

                    b.ToTable("Fish");
                });

            modelBuilder.Entity("SmartAquaponic.Domain.Lamp", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Lumen")
                        .HasColumnType("int");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Power")
                        .HasColumnType("int");

                    b.Property<int>("Socket")
                        .HasColumnType("int");

                    b.Property<int?>("SpotLightId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SpotLightId");

                    b.ToTable("Lamp");
                });

            modelBuilder.Entity("SmartAquaponic.Domain.Log", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Event")
                        .HasColumnType("int");

                    b.Property<int>("Hash")
                        .HasColumnType("int");

                    b.Property<string>("Ip")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Message")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Log");
                });

            modelBuilder.Entity("SmartAquaponic.Domain.Plant", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsHydroponic")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLowLigth")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PotId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PotId");

                    b.ToTable("Plant");
                });

            modelBuilder.Entity("SmartAquaponic.Domain.Pot", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<double>("Heigth")
                        .HasColumnType("float");

                    b.Property<double>("Length")
                        .HasColumnType("float");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Rgb")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Rock")
                        .HasColumnType("int");

                    b.Property<double>("Weight")
                        .HasColumnType("float");

                    b.Property<double>("Width")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("Pot");
                });

            modelBuilder.Entity("SmartAquaponic.Domain.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("Cost")
                        .HasColumnType("float");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PotId")
                        .HasColumnType("int");

                    b.Property<int?>("SpotLightId")
                        .HasColumnType("int");

                    b.Property<int?>("TankId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PotId");

                    b.HasIndex("SpotLightId");

                    b.HasIndex("TankId");

                    b.ToTable("Product");
                });

            modelBuilder.Entity("SmartAquaponic.Domain.Resource", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Key")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Module")
                        .HasColumnType("int");

                    b.Property<int?>("UserPreferenceId")
                        .HasColumnType("int");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("UserPreferenceId");

                    b.ToTable("Resource");
                });

            modelBuilder.Entity("SmartAquaponic.Domain.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("GroupId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("GroupId");

                    b.HasIndex("UserId");

                    b.ToTable("Role");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Role");
                });

            modelBuilder.Entity("SmartAquaponic.Domain.SpotLight", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<double>("Heigth")
                        .HasColumnType("float");

                    b.Property<double>("Length")
                        .HasColumnType("float");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Slots")
                        .HasColumnType("int");

                    b.Property<int>("Socket")
                        .HasColumnType("int");

                    b.Property<double>("Weight")
                        .HasColumnType("float");

                    b.Property<double>("Width")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("SpotLight");
                });

            modelBuilder.Entity("SmartAquaponic.Domain.Tank", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<double>("Heigth")
                        .HasColumnType("float");

                    b.Property<double>("Length")
                        .HasColumnType("float");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("PH")
                        .HasColumnType("int");

                    b.Property<int?>("WaterPumpId")
                        .HasColumnType("int");

                    b.Property<double>("WaterTemp")
                        .HasColumnType("float");

                    b.Property<double>("Weight")
                        .HasColumnType("float");

                    b.Property<double>("Width")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("WaterPumpId");

                    b.ToTable("Tank");
                });

            modelBuilder.Entity("SmartAquaponic.Domain.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Checksum")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsAuthenticated")
                        .HasColumnType("bit");

                    b.Property<bool>("IsLocked")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("LoginAttemts")
                        .HasColumnType("int");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PreferenceId")
                        .HasColumnType("int");

                    b.Property<string>("TempPassword")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("PreferenceId");

                    b.ToTable("User");
                });

            modelBuilder.Entity("SmartAquaponic.Domain.UserPreference", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DateFormat")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDefault")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TimeZone")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("UserPreference");
                });

            modelBuilder.Entity("SmartAquaponic.Domain.WaterPump", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("WaterPump");
                });

            modelBuilder.Entity("SmartAquaponic.Domain.Group", b =>
                {
                    b.HasBaseType("SmartAquaponic.Domain.Role");

                    b.HasDiscriminator().HasValue("Group");
                });

            modelBuilder.Entity("SmartAquaponic.Domain.Decor", b =>
                {
                    b.HasOne("SmartAquaponic.Domain.Tank", null)
                        .WithMany("Decors")
                        .HasForeignKey("TankId");
                });

            modelBuilder.Entity("SmartAquaponic.Domain.Fish", b =>
                {
                    b.HasOne("SmartAquaponic.Domain.Fish", null)
                        .WithMany("Predators")
                        .HasForeignKey("FishId");

                    b.HasOne("SmartAquaponic.Domain.Tank", null)
                        .WithMany("Fishes")
                        .HasForeignKey("TankId");
                });

            modelBuilder.Entity("SmartAquaponic.Domain.Lamp", b =>
                {
                    b.HasOne("SmartAquaponic.Domain.SpotLight", null)
                        .WithMany("Lamps")
                        .HasForeignKey("SpotLightId");
                });

            modelBuilder.Entity("SmartAquaponic.Domain.Log", b =>
                {
                    b.HasOne("SmartAquaponic.Domain.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("SmartAquaponic.Domain.Plant", b =>
                {
                    b.HasOne("SmartAquaponic.Domain.Pot", null)
                        .WithMany("Plants")
                        .HasForeignKey("PotId");
                });

            modelBuilder.Entity("SmartAquaponic.Domain.Product", b =>
                {
                    b.HasOne("SmartAquaponic.Domain.Pot", "Pot")
                        .WithMany()
                        .HasForeignKey("PotId");

                    b.HasOne("SmartAquaponic.Domain.SpotLight", "SpotLight")
                        .WithMany()
                        .HasForeignKey("SpotLightId");

                    b.HasOne("SmartAquaponic.Domain.Tank", "Tank")
                        .WithMany()
                        .HasForeignKey("TankId");
                });

            modelBuilder.Entity("SmartAquaponic.Domain.Resource", b =>
                {
                    b.HasOne("SmartAquaponic.Domain.UserPreference", null)
                        .WithMany("Resources")
                        .HasForeignKey("UserPreferenceId");
                });

            modelBuilder.Entity("SmartAquaponic.Domain.Role", b =>
                {
                    b.HasOne("SmartAquaponic.Domain.Group", null)
                        .WithMany("Roles")
                        .HasForeignKey("GroupId");

                    b.HasOne("SmartAquaponic.Domain.User", null)
                        .WithMany("Roles")
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("SmartAquaponic.Domain.Tank", b =>
                {
                    b.HasOne("SmartAquaponic.Domain.WaterPump", "WaterPump")
                        .WithMany()
                        .HasForeignKey("WaterPumpId");
                });

            modelBuilder.Entity("SmartAquaponic.Domain.User", b =>
                {
                    b.HasOne("SmartAquaponic.Domain.UserPreference", "Preference")
                        .WithMany()
                        .HasForeignKey("PreferenceId");
                });
#pragma warning restore 612, 618
        }
    }
}
